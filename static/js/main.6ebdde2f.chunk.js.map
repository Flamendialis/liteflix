{"version":3,"sources":["assets/liteflix.svg","assets/plus.svg","assets/play.svg","assets/bell.svg","assets/fill-1.svg","assets/add-list.svg","assets/like.svg","assets/thin-arrow.svg","assets/fill-2.svg","assets/user-01.svg","assets/arrow.svg","assets/clip.svg","components/Header/Header.js","components/FeaturedMovie/FeaturedMovie.js","components/ShortList/ShortList.js","components/BigList/BigList.js","components/MobileMenu/MobileMenu.js","components/UploadModal/UploadModal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","state","background","handleScroll","bind","window","addEventListener","this","scrollY","setState","backgroundColor","className","style","href","src","logo","alt","onClick","openModal","plus","bell","user","avatar","avatarDark","arrow","React","Component","FeaturedMovie","backgroundImage","title","play","addList","overview","categories","require","ShortCard","localBackground","poster","local","add","like","genres","filter","cat","id","category","name","ShortList","moviesList","map","movie","key","backdrop_path","genre_ids","BigCard","BigList","poster_path","MobileMenu","collapsed","collapseSidebar","openModalCloseMenu","document","getElementById","classList","remove","UploadModal","fakeProgress","loaded","error","errorType","fileName","catsOpen","getUrl","handleDragOver","handleDrop","selectCategory","handleTitle","openCategories","uploadnewMovie","retry","cancelLoad","select","event","contains","target","value","preventDefault","dataTransfer","items","kind","file","getAsFile","type","files","cleanData","clear","clearData","size","reader","FileReader","onload","result","readAsDataURL","parseInt","dataset","textContent","uploaded","addNewMovie","count","timer","clearInterval","inc","setInterval","fullMovieSpecs","progress","width","onDragOver","closeModal","onDrop","htmlFor","clip","ref","fileInput","onChange","accept","autocomplete","placeholder","data-value","disabled","App","featuredMovie","upcomingMovies","myMovies","popularMovies","showModal","getFeaturedMovie","getPopularMovies","getUpcomingMovies","toggleModal","updateMyMovies","fetch","then","res","json","results","firstFour","slice","length","alert","localStorage","getItem","JSON","parse","setItem","stringify","marginTop","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6ebdde2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/liteflix.60daaf3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.be78363e.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.393d4c61.svg\";","module.exports = __webpack_public_path__ + \"static/media/bell.42d9b0eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/fill-1.f5be77f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/add-list.e5cebfd3.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.94d1bb47.svg\";","module.exports = __webpack_public_path__ + \"static/media/thin-arrow.2084d69f.svg\";","module.exports = __webpack_public_path__ + \"static/media/fill-2.6b16afd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-01.7d31052a.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.b4d4884d.svg\";","module.exports = __webpack_public_path__ + \"static/media/clip.14b9bd2c.svg\";","import React from 'react';\r\nimport logo from '../../assets/liteflix.svg';\r\nimport plus from '../../assets/plus.svg';\r\nimport bell from '../../assets/bell.svg';\r\nimport user from '../../assets/user-01.svg';\r\nimport arrow from '../../assets/arrow.svg';\r\nimport avatar from '../../assets/fill-1.svg';\r\nimport avatarDark from '../../assets/fill-2.svg';\r\nimport './Header.scss';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            background: 'transparent'\r\n        }\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll() {\r\n        if(window.scrollY > 50) {\r\n            this.setState({background: '#000000'})\r\n        }\r\n        else {\r\n            this.setState({background: 'transparent'})\r\n        }\r\n    }\r\n    render() {\r\n        const background = {backgroundColor: this.state.background}\r\n        return(\r\n            <div className='header' style={background}>\r\n                <a href='#'><img className='logo' src={logo} alt='liteflix logo' /></a>\r\n                <nav className='navbar'>\r\n                    <ul>\r\n                        <a href='#'><li className='nav-item'>Inicio</li></a>\r\n                        <a href='#'><li className='nav-item'>Series</li></a>\r\n                        <a href='#'><li className='nav-item'>Películas</li></a>\r\n                        <a href='#'><li className='nav-item'>Agregados recientemente</li></a>\r\n                        <a href='#'><li className='nav-item'>Mi lista</li></a>\r\n                    </ul>\r\n                </nav>\r\n                <div className='add-movie' onClick={this.props.openModal}>\r\n                    <img src={plus} alt='plus symbol' />\r\n                    <p>Agregar película</p> \r\n                </div>\r\n                <div className='user-navbar-container'>\r\n                    <div className='user-navbar'>\r\n                        <a href='#'><div className='nav-item'>Niños</div></a>\r\n                        <a href='#'>\r\n                            <div className='bell-container'>\r\n                                <img className='bell' src={bell} alt='bell' />\r\n                            </div>\r\n                        </a>\r\n                        <div className='user-menu-container'>\r\n                            <a href='#'><img className='user' src={user} alt='user avatar' /></a>\r\n                            <div className='user-menu'>\r\n                                <div className='active-user'>\r\n                                    <div className='circled-avatar active'>\r\n                                        <img  src={avatar}  alt='user avatar' />\r\n                                    </div>\r\n                                    <a href='#'><p>Ernesto G...</p></a>\r\n                                </div>\r\n                                <div className='inactive-user'>\r\n                                    <div className='circled-avatar inactive'>\r\n                                        <img  src={avatarDark} alt='user avatar' />\r\n                                    </div>\r\n                                    <a href='#'><p>User 03</p></a>\r\n                                </div>\r\n                                <div className='inactive-user'>\r\n                                    <div className='circled-avatar inactive'>\r\n                                        <img  src={avatarDark} alt='user avatar' />\r\n                                    </div>\r\n                                    <a href='#'><p>User 04</p></a>\r\n                                </div>\r\n                                <div className='user-options'>\r\n                                    <a href='#'><p>Configuración</p></a>\r\n                                </div>\r\n                                <div className='user-options'>\r\n                                    <a href='#'><p>Ayuda</p></a>\r\n                                </div>\r\n                                <div className='user-options'>\r\n                                    <a href='#'><p>Log Out</p></a>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <a href='#'><img className='arrow' src={arrow} alt='down arrow' /></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './FeaturedMovie.scss';\r\nimport play from '../../assets/play.svg';\r\nimport plus from '../../assets/plus.svg';\r\nimport addList from '../../assets/add-list.svg';\r\n\r\nclass FeaturedMovie extends React.Component {\r\n    render() {\r\n        const background = {\r\n            backgroundImage: \"url('https://image.tmdb.org/t/p/original\" + this.props.background +\"')\"\r\n        };\r\n        return(\r\n            <div className='main-container'style={background}>\r\n                <div className='featured-content'>\r\n                    <p>ORIGINAL DE <span>LITEFLIX</span></p>\r\n                    <div className='featured-title'>{this.props.title}</div>\r\n                    <div className='featured-buttons-container'>\r\n                        <button className='hero-btn'><img src={play} alt='play button' />Reproducir</button>\r\n                        <a href='#'><img src={addList} alt='add button'/></a>\r\n                        <button className='hero-btn'><img src={plus} alt='add button' />Mi Lista</button>\r\n                    </div>\r\n                    <div className='overview'>\r\n                        <p>Ver temporada 1</p>\r\n                        <p>{this.props.overview}</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeaturedMovie;","import React from 'react';\r\nimport './ShortList.scss';\r\nimport play from '../../assets/play.svg';\r\nimport like from '../../assets/like.svg';\r\nimport add from '../../assets/add-list.svg';\r\nimport arrow from '../../assets/thin-arrow.svg';\r\n\r\nvar categories =require('../../categories/categories.json')\r\n\r\nclass ShortCard extends React.Component {\r\n    render() {\r\n        const background = {\r\n            backgroundImage: \"url('https://image.tmdb.org/t/p/w300\" + this.props.background +\"')\"\r\n        };\r\n        const localBackground = {\r\n            backgroundImage: \"url(\" + this.props.poster +\")\"\r\n        }\r\n        return(\r\n            <div className='short-card' style={this.props.local ? localBackground : background}>\r\n                <div className='short-card-content'>\r\n                    <div className='short-card-buttons'>\r\n                        <a href='#'>\r\n                            <img src={add} alt='add symbol' />\r\n                        </a>\r\n                        <a href='#'>\r\n                            <div className='like-wrapper'>\r\n                                <img src={like} alt='like button' />\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div className='short-card-play'>\r\n                        <a href='#'>\r\n                            <div className='play-wrapper'>    \r\n                                <img src={play} alt='play button' />\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n                    <div className='short-card-info'>\r\n                        <div className='info-container'>\r\n                            <div className='short-card-title'>\r\n                                <p>{this.props.title}</p>\r\n                            </div>\r\n                            <div className='short-card-specs'>    \r\n                                <div className='short-card-match'>\r\n                                    <p>98% Coincidencia</p>\r\n                                </div>\r\n                                <div className='short-card-age'>\r\n                                    <p>+16</p>\r\n                                </div>\r\n                                <div className='short-card-duration'>\r\n                                    <p>1h 30 min</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='short-card-genre'>\r\n                                <p>\r\n                                    {\r\n                                        categories.genres.filter(cat => cat.id === this.props.category)[0].name\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='short-card-arrow'>\r\n                        <a href='#'>\r\n                            <img src={arrow} alt='down arrow' />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ShortList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='short-list-container'>\r\n                <div>\r\n                    <h2>{this.props.title}</h2>\r\n                </div>\r\n                <div className='short-container-wrapper'>\r\n                    <div className='short-cards-container'>\r\n                        {\r\n                            this.props.moviesList.map(\r\n                                movie => \r\n                                <ShortCard \r\n                                    key={movie.title}\r\n                                    background={movie.backdrop_path}\r\n                                    title={movie.title}\r\n                                    category={movie.genre_ids[0]}\r\n                                    poster ={movie.poster}\r\n                                    local={this.props.local}\r\n                                />\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ShortList;","import React from 'react';\r\nimport './BigList.scss';\r\nimport play from '../../assets/play.svg';\r\nimport like from '../../assets/like.svg';\r\nimport arrow from '../../assets/thin-arrow.svg';\r\n\r\nvar categories = require('../../categories/categories.json');\r\n\r\nclass BigCard extends React.Component {\r\n    render() {\r\n        const background = {\r\n            backgroundImage: \"url('https://image.tmdb.org/t/p/w300\" + this.props.background +\"')\"\r\n        };\r\n        return(\r\n            <div className='big-card' style={background}>\r\n                <div className='big-card-content'>\r\n\r\n                    <div className='big-card-play'>\r\n                        <a href='#'>\r\n                            <div className='big-play-wrapper'>    \r\n                                <img src={play} alt='play button' />\r\n                            </div>\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className='big-card-info'>\r\n\r\n                        <div className='big-info-container'>\r\n                            <div className='big-card-title'>\r\n                                <p>{this.props.title}</p>\r\n                            </div>\r\n                            <div className='big-card-specs'>    \r\n                                <div className='big-card-match'>\r\n                                    <p>98% Coincidencia</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='big-card-specs'>      \r\n                                <div className='big-card-age'>\r\n                                    <p>+16</p>\r\n                                </div>\r\n                                <div className='big-card-duration'>\r\n                                    <p>1h 30 min</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className='big-card-genre'>\r\n                                <p>\r\n                                    {\r\n                                        categories.genres.filter(cat => cat.id === this.props.category)[0].name\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <a href='#'>\r\n                            <div className='big-like-wrapper'>\r\n                                <img src={like} alt='like button' />\r\n                            </div>\r\n                        </a>\r\n\r\n                    </div>\r\n\r\n                    <div className='big-card-arrow'>\r\n                        <a href='#'>\r\n                            <img src={arrow} alt='down arrow' />\r\n                        </a>\r\n                    </div>\r\n\r\n\r\n                </div>        \r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nclass BigList extends React.Component {\r\n    \r\n    render() {\r\n        return(\r\n            <div className='big-list-container'>\r\n                <h2>{this.props.title}</h2>\r\n                <div className='big-cards-container'>\r\n                    {\r\n                        this.props.moviesList.map(\r\n                            movie => \r\n                            <BigCard \r\n                                key={movie.title}\r\n                                background={movie.poster_path}\r\n                                title={movie.title}\r\n                                category={movie.genre_ids[0]}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BigList;","import React from 'react';\r\nimport './MobileMenu.scss';\r\nimport logo from '../../assets/liteflix.svg';\r\nimport avatar from '../../assets/fill-1.svg';\r\nimport bell from '../../assets/bell.svg';\r\nimport plus from '../../assets/plus.svg';\r\n\r\n\r\nclass MobileMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true\r\n        }\r\n        this.collapseSidebar = this.collapseSidebar.bind(this);\r\n        this.openModalCloseMenu = this.openModalCloseMenu.bind(this);\r\n    }\r\n    collapseSidebar() {\r\n        if(!this.state.collapsed) {\r\n            document.getElementById('sidebar').classList.add('collapsed');\r\n            this.setState({ collapsed: true });\r\n        }\r\n        else{\r\n            document.getElementById('sidebar').classList.remove('collapsed');\r\n            this.setState({ collapsed: false });\r\n\r\n        }\r\n    }\r\n        openModalCloseMenu(){\r\n            this.props.openModal();\r\n            this.collapseSidebar();\r\n        }  \r\n    render() {\r\n        return(\r\n            <div className='mobile-menu-container'>\r\n                <div className='hamburger' onClick={this.collapseSidebar}>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n                {\r\n                    !this.state.collapsed && \r\n                    <div className='transparent-overlay' onClick={this.collapseSidebar}></div>\r\n                }\r\n                <div id='sidebar' className='sidebar collapsed'>\r\n                    <div className='mobile-menu-logo'>\r\n                        <a href='#'><img src={logo} alt='liteflix logo'/></a>\r\n                    </div>\r\n                    <div className='mobile-user'>\r\n                        <div className='avatar'>\r\n                            <img src={avatar} alt='avatar' />\r\n                        </div>\r\n                        <p>Ernesto Garmendia</p>\r\n                    </div>\r\n                    <div className='mobile-user-options'>\r\n                        <div>\r\n                            <a href='#'><p>Cambiar usuario</p></a>\r\n                        </div>\r\n                        <div>\r\n                            <a href='#'><p>Configuración</p></a>\r\n                        </div>\r\n                        <div>\r\n                            <a href='#'><p>Ayuda</p></a>\r\n                        </div>\r\n                    </div>\r\n                        <div className='news'>\r\n                            <a href='#'>\r\n                                <div>\r\n                                    <img src={bell} alt='bell' />\r\n                                </div>\r\n                                <p>Novedades</p>\r\n                            </a>\r\n                        </div>\r\n                    <div className='mobile-navbar'>\r\n                        <a href='#'><p>Series</p></a>\r\n                        <a href='#'><p>Pelícuas</p></a>\r\n                        <a href='#'><p>Mi lista</p></a>            \r\n                        <a href='#'><p>Niños</p></a>\r\n                    </div>\r\n                    <div className='mobile-add-movie' onClick={this.openModalCloseMenu}>\r\n                        <img src={plus} alt='add symbol' />\r\n                        <p>Agregar película</p>\r\n                    </div>\r\n                    <div className='mobile-logout'>\r\n                        <a href='#'><p>Log Out</p></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MobileMenu;","import React from 'react';\r\nimport './UploadModal.scss'\r\nimport clip from '../../assets/clip.svg'\r\nimport logo from '../../assets/liteflix.svg'\r\n\r\nvar categories = require('../../categories/categories.json');\r\n\r\nclass UploadModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fakeProgress: 0,\r\n            loaded: false,\r\n            error: false,\r\n            errorType: '',\r\n            title: '',\r\n            category: 0,\r\n            poster: '',\r\n            fileName: '',\r\n            catsOpen: false   \r\n        }\r\n        this.getUrl = this.getUrl.bind(this);\r\n        this.handleDragOver = this.handleDragOver.bind(this);\r\n        this.handleDrop = this.handleDrop.bind(this);\r\n        this.selectCategory = this.selectCategory.bind(this);\r\n        this.handleTitle = this.handleTitle.bind(this);\r\n        this.openCategories = this.openCategories.bind(this);\r\n        this.selectCategory = this.selectCategory.bind(this);\r\n        this.uploadnewMovie = this.uploadnewMovie.bind(this);\r\n        this.retry =this.retry.bind(this);\r\n        this.fakeProgress = this.fakeProgress.bind(this);\r\n        this.cancelLoad = this.cancelLoad.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        const select = document.getElementById('category-select');\r\n        window.addEventListener('click',  event => {\r\n            if (!select.contains(event.target)) {\r\n                select.classList.remove('open');\r\n            }\r\n        }); // to close custom movie category select when you click outside the options\r\n    }\r\n    handleTitle(event) {\r\n        this.setState({title: event.target.value})\r\n    }\r\n    handleDragOver(event) { \r\n        event.preventDefault();\r\n    }\r\n    handleDrop(event) {\r\n        event.preventDefault();\r\n        if (event.dataTransfer.items) {\r\n              if (event.dataTransfer.items[0].kind === 'file' ) {\r\n                var file = event.dataTransfer.items[0].getAsFile();\r\n                if(file.type === 'image/jpeg' || file.type === 'image/png') {\r\n\r\n                    this.getUrl(file);\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        error: true,\r\n                        errorType: '(Archivo inválido)'\r\n                    });\r\n                }\r\n              }\r\n          } else {\r\n                if(event.dataTransfer.files[0].type === 'image/jpeg' || event.dataTransfer.files[0].type === 'image/png') {\r\n\r\n                    this.getUrl(event.dataTransfer.files[0]);\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        error: true,\r\n                        errorType: '(Archivo inválido)'\r\n                    });\r\n                }\r\n            }\r\n          this.cleanData(event);\r\n    }\r\n    cleanData(event){\r\n        if (event.dataTransfer.items) {\r\n            event.dataTransfer.items.clear();\r\n          } else {\r\n            event.dataTransfer.clearData();\r\n          }\r\n    }\r\n    getUrl(file) {\r\n        if(file.size > 1000000){\r\n            this.setState({\r\n                error: true,\r\n                errorType: '(Máximo 1 Mb)'\r\n            });\r\n        }\r\n        else {\r\n                if(file.type === 'image/jpeg' || file.type === 'image/png') {\r\n                    this.fakeProgress();\r\n                    var reader = new FileReader();\r\n                    reader.onload =  event => {\r\n                        this.setState({poster: event.target.result})\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n                    this.setState({\r\n                        fileName: file.name,\r\n                        loaded: true\r\n                    })   \r\n                }\r\n                else {\r\n                    this.setState({\r\n                        error: true,\r\n                        errorType: '(Archivo inválido)'\r\n                    });\r\n                }\r\n        }\r\n    }\r\n    openCategories() {\r\n        if(!this.state.catsOpen) {\r\n            document.getElementById('category-select').classList.add('open');\r\n            this.setState({catsOpen: true});\r\n        }\r\n        else {\r\n            document.getElementById('category-select').classList.remove('open');\r\n            this.setState({catsOpen: false});\r\n        }\r\n    }\r\n    selectCategory(event){\r\n        this.setState({category: parseInt(event.target.dataset.value)});\r\n        document.getElementById('actual-selection').textContent = event.target.textContent;\r\n    }\r\n    uploadnewMovie() {\r\n        this.setState({uploaded: true});\r\n        this.props.addNewMovie(this.state.poster, this.state.title, this.state.category)\r\n    }\r\n    retry() {\r\n        this.setState({error: false});\r\n    }\r\n    fakeProgress() {\r\n        \r\n        var count = 0;\r\n        \r\n        var countFunction = () => {\r\n            window.inc = setInterval(timer, 20);\r\n        }\r\n        \r\n        var timer =  () => {\r\n              if (count >= 100) {\r\n                   clearInterval(window.inc);\r\n               }\r\n               else {\r\n                   count += 1;\r\n                   this.setState(state =>({\r\n                        fakeProgress: count\r\n                   })) \r\n               }\r\n       } \r\n       countFunction();   \r\n    }\r\n    cancelLoad() {\r\n        clearInterval(window.inc);\r\n        this.setState({\r\n            fileName: '',\r\n            poster: '',\r\n            fakeProgress: 0,\r\n            loaded: false\r\n        })\r\n    }\r\n    render() {\r\n        var fullMovieSpecs = (this.state.category > 0 && this.state.title !== '' && this.state.poster !== '' && this.state.fakeProgress >= 100)\r\n        const progress = { width: ''+ this.state.fakeProgress +'%'}\r\n        return(\r\n            <div className='modal-main-container' onDragOver={this.handleDragOver} >\r\n                <div className='modal-back-overlay' onClick={this.props.closeModal}></div>\r\n                {   !this.state.uploaded\r\n                    ?\r\n                    <div className= 'modal'>\r\n                        <div className='close-x' onClick={this.props.closeModal} >x</div>\r\n                        {\r\n                            this.state.error\r\n                            ?\r\n                            <div className='load-file' >\r\n                                <div className='load-text'>\r\n                                    <p><span>Error!</span> No se pudo cargar la película <span>{this.state.errorType}</span></p>\r\n                                </div>\r\n                                <div className='bar error-bar'></div>\r\n                                <div className='load-button' onClick={this.retry}>\r\n                                    <p>Reintentar</p>\r\n                                </div>   \r\n                            </div>\r\n                            : !this.state.loaded\r\n                            ?\r\n                            <div className='add-file' onDrop={this.handleDrop} onDragOver={this.handleDragOver}>\r\n                                <label htmlFor=\"addFile\" className='fake-input-file'>\r\n                                    <img src={clip} alt='paperclip' />\r\n                                    <p>Agregar archivo <span>o arrastrarlo y soltarlo aquí</span></p>\r\n                                </label>\r\n                                <input type=\"file\" id=\"addFile\" ref={this.fileInput} onChange={event => this.getUrl(event.target.files[0])} accept=\"image/*\" />\r\n                            </div>\r\n                            :\r\n                            <div className='load-file' >\r\n                                <div className='load-text'>\r\n                                    {\r\n                                        this.state.fakeProgress < 100 \r\n                                        ? <p>{'Cargando ' + this.state.fakeProgress + '%'}</p>\r\n                                        : <p><span>100% Cargado</span></p>\r\n                                    }\r\n                                </div>\r\n                                <div className='bar loading-bar'>\r\n                                    <div style={progress}></div>\r\n                                </div>\r\n                                <div className='load-button'>\r\n                                    {   \r\n                                        this.state.fakeProgress < 100\r\n                                        ?\r\n                                        <p onClick={this.cancelLoad}>Cancelar</p>\r\n                                        :\r\n                                        <p className='load-filename'>{this.state.fileName}</p>\r\n                                    }\r\n                                </div>   \r\n                            </div>\r\n                        }\r\n\r\n                        <div className='movie-inputs'>\r\n                            <div className='input-title'>\r\n                                <label htmlFor='title'>NOMBRE DE LA PELÍCULA</label>\r\n                                <input id='title' type='text' autocomplete=\"off\" value={this.state.title} onChange={this.handleTitle} placeholder='Escribe el título'/>\r\n                            </div>\r\n                            <div className='select-caategory'>\r\n                                <label htmlFor='category'>CATEGORÍA</label>\r\n                                <div id='category' className='category-select-wrapper' onClick={this.openCategories}>\r\n                                    <div id='category-select' className='category-select'>\r\n                                        <div className=\"category-select-trigger\" >\r\n                                            <p id='actual-selection'>Selecciona una opción</p>\r\n                                        </div>\r\n                                        \r\n                                            <div className=\"category-options\">\r\n                                                <div className='options-wrapper'>\r\n                                                    {\r\n                                                        categories.genres.map(\r\n                                                            cat => <span className=\"category-option\" onClick={this.selectCategory} data-value={cat.id} key={cat.id}>{cat.name}</span>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='upload-button-container'>\r\n                            <button disabled={!fullMovieSpecs} onClick={this.uploadnewMovie}>\r\n                                Subir Película\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className='modal modal-thanks'>\r\n                        <div className='close-x' onClick={this.props.closeModal} >x</div>\r\n                        <img src={logo} alt='liteflix logo' />\r\n                        <div className='modal-thanks-text'>\r\n                            <p>\r\n                                <span>Felicitaciones!</span><br />\r\n                                <span>{this.state.title}</span> fue correctamente subido \r\n                                a la categoría <span>{categories.genres.filter(cat => cat.id === this.state.category)[0].name}</span>\r\n                                </p>\r\n                        </div>\r\n                        <button onClick={this.props.closeModal}>\r\n                            Cerrar\r\n                        </button>\r\n                    </div>                            \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadModal;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport FeaturedMovie from './components/FeaturedMovie'\nimport ShortList from './components/ShortList'\nimport BigList from './components/BigList'\nimport MobileMenu from './components/MobileMenu'\nimport UploadModal from './components/UploadModal'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      featuredMovie: {},\n      upcomingMovies: [],\n      myMovies: [],\n      popularMovies: [],\n      showModal: false\n    }\n    this.getFeaturedMovie = this.getFeaturedMovie.bind(this);\n    this.getPopularMovies = this.getPopularMovies.bind(this);\n    this.getUpcomingMovies = this.getUpcomingMovies.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.addNewMovie = this.addNewMovie.bind(this);\n    this.updateMyMovies = this.updateMyMovies.bind(this);\n    this.openModal = this.openModal.bind(this);\n  }\n  getFeaturedMovie() {\n    fetch(\"https://api.themoviedb.org/3/movie/now_playing?api_key=6f26fd536dd6192ec8a57e94141f8b20\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({featuredMovie: result.results[0]});\n        })\n  }\n  getUpcomingMovies() {\n    fetch(\"https://api.themoviedb.org/3/movie/upcoming?api_key=6f26fd536dd6192ec8a57e94141f8b20\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let firstFour = result.results.slice(0, 4);\n          this.setState({upcomingMovies: firstFour});\n        })  \n  }\n  getPopularMovies() {\n    fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=6f26fd536dd6192ec8a57e94141f8b20\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let firstFour = result.results.slice(0,4);\n          this.setState({popularMovies: firstFour});\n        }) \n  }\n  componentDidMount() {\n    this.getFeaturedMovie();\n    this.getUpcomingMovies();\n    this.getPopularMovies();\n    this.updateMyMovies();\n  }\n  openModal() {\n    if(this.state.myMovies.length >= 4) {\n      alert('Memoria local llena!')\n    }\n    else {\n      this.toggleModal()\n    }\n  }\n  toggleModal() {\n    if(this.state.showModal){\n      this.setState({showModal: false});\n    }\n    else {\n      this.setState({showModal: true});\n    }\n  }\n  updateMyMovies(){\n    if(window.localStorage.getItem('myMovies')){\n      this.setState({ myMovies: JSON.parse(window.localStorage.getItem('myMovies')).myMovies })\n    }\n  }\n  addNewMovie(poster, title, category){\n    window.localStorage.setItem( \n      'myMovies',\n      JSON.stringify({\n        myMovies: [\n          ...this.state.myMovies,\n          {\n            title: title,\n            genre_ids: [category],\n            poster: poster,\n            backdrop_path: \"/xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\"\n          }\n        ]\n      })\n    )\n    if(JSON.parse(window.localStorage.getItem('myMovies')).myMovies.length <= 4){\n      this.updateMyMovies();\n    }\n    else{\n      alert('Memoria full')\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Header openModal={this.openModal} />\n        <MobileMenu openModal={this.openModal} />\n        { \n          this.state.showModal \n          && \n          <UploadModal \n            closeModal={this.toggleModal}\n            addNewMovie={this.addNewMovie} \n          /> \n        }\n        <FeaturedMovie \n          title = {this.state.featuredMovie.title}\n          background ={this.state.featuredMovie.backdrop_path}\n          overview = {this.state.featuredMovie.overview}\n        />\n        <div style = {{marginTop: -102}}>\n          <ShortList title='Próximamente' moviesList={this.state.upcomingMovies} local={false}/>\n          {\n            this.state.myMovies.length > 0\n            &&\n            <ShortList title='Mis películas' moviesList={this.state.myMovies} local={true} />\n          }\n        </div>\n        <BigList title='POPULARES DE LITEFLIX' moviesList={this.state.popularMovies} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}